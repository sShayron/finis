.progress-bar {
  margin: 0 auto;
  display: flex;
  justify-content: center;
  position: relative;
}

.progress-bar .totals {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}

.circular-progress {
  --size: 250px;
  --half-size: calc(var(--size) / 2);
  --stroke-width: 20px;
  --radius: calc((var(--size) - var(--stroke-width)) / 2);
  --circumference: calc(var(--radius) * pi * 2);
  --dash: calc((var(--progress) * var(--circumference)) / 100);
  animation: progress-animation 3s linear 0s 1 forwards;
}

.circular-progress circle {
  cx: var(--half-size);
  cy: var(--half-size);
  r: var(--radius);
  stroke-width: var(--stroke-width);
  fill: none;
}

.circular-progress circle.bg {
  stroke: #ddd;
}

.circular-progress circle.first {
  /* --dash: calc((10 * var(--circumference)) / 100); */
  transform: rotate(-90deg);
  transform-origin: var(--half-size) var(--half-size);
  stroke-dasharray: var(--dash) calc(var(--circumference) - var(--dash));
  transition: stroke-dasharray 0.3s linear 0s;
  stroke: rgba(0, 0, 0, 0.8);
}

.circular-progress circle.second {
  /* --dash: calc((20 * var(--circumference)) / 100); */
  /* transform: rotate(0deg); */
  transform-origin: var(--half-size) var(--half-size);
  stroke-dasharray: var(--dash) calc(var(--circumference) - var(--dash));
  transition: stroke-dasharray 1s linear 0.5s;
  stroke: rgba(0, 0, 0, 0.4);
}

.circular-progress circle.third {
  /* --dash: calc((30 * var(--circumference)) / 100); */
  /* transform: rotate(90deg); */
  transform-origin: var(--half-size) var(--half-size);
  stroke-dasharray: var(--dash) calc(var(--circumference) - var(--dash));
  transition: stroke-dasharray 1.5s linear 1.5s;
  stroke: rgba(0, 0, 0, 0.6);
}
.circular-progress circle.fourth {
  /* --dash: calc((40 * var(--circumference)) / 100); */
  /* transform: rotate(180deg); */
  transform-origin: var(--half-size) var(--half-size);
  stroke-dasharray: var(--dash) calc(var(--circumference) - var(--dash));
  transition: stroke-dasharray 1s linear 3s;
  stroke: rgba(0, 0, 0, 0.2);
}

@property --progress {
  syntax: "<number>";
  inherits: false;
  initial-value: 0;
}

@keyframes progress-animation {
  from {
    --progress: 0;
  }
  to {
    --progress: 20;
  }
}
